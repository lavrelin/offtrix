# -*- coding: utf-8 -*-
import logging
from datetime import datetime
from typing import Optional
from config import Config

logger = logging.getLogger(__name__)

class AdminNotificationService:
    """–°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    
    def __init__(self):
        self.bot = None
    
    def set_bot(self, bot):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞"""
        self.bot = bot
        logger.info("Bot instance set for admin notifications")
    
    async def send_notification(self, message: str, parse_mode: str = None):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω—Å–∫—É—é –≥—Ä—É–ø–ø—É"""
        if not self.bot:
            logger.warning("Bot instance not set, cannot send notification")
            return False
        
        try:
            await self.bot.send_message(
                chat_id=Config.ADMIN_GROUP_ID,
                text=message,
                parse_mode=parse_mode
            )
            logger.info("Admin notification sent successfully")
            return True
        except Exception as e:
            logger.error(f"Error sending admin notification: {e}")
            return False
    
    async def notify_ban(self, username: str, user_id: int, reason: str, moderator: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        message = (
            f"üö´ –ë–õ–û–ö–ò–†–û–í–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
            f"üÜî ID: {user_id}\n"
            f"üìù –ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
            f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: @{moderator}\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )
        await self.send_notification(message)
    
    async def notify_unban(self, username: str, user_id: int, moderator: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞–∑–±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        message = (
            f"‚úÖ –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
            f"üÜî ID: {user_id}\n"
            f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: @{moderator}\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )
        await self.send_notification(message)
    
    async def notify_mute(self, username: str, user_id: int, duration: str, moderator: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –º—É—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        message = (
            f"üîá –ú–£–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
            f"üÜî ID: {user_id}\n"
            f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration}\n"
            f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: @{moderator}\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )
        await self.send_notification(message)
    
    async def notify_unmute(self, username: str, user_id: int, moderator: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞–∑–º—É—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        message = (
            f"üîä –†–ê–ó–ú–£–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
            f"üÜî ID: {user_id}\n"
            f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: @{moderator}\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )
        await self.send_notification(message)
    
    async def notify_report(self, reporter: str, reporter_id: int, target: str, reason: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∂–∞–ª–æ–±–µ"""
        message = (
            f"üö® –ù–û–í–ê–Ø –ñ–ê–õ–û–ë–ê\n\n"
            f"üë§ –û—Ç: @{reporter} (ID: {reporter_id})\n"
            f"üéØ –ù–∞: {target}\n"
            f"üìù –ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )
        await self.send_notification(message)
    
    async def notify_game_winner(self, game_version: str, username: str, user_id: int, word: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ –≤ –∏–≥—Ä–µ"""
        message = (
            f"üèÜ –ü–û–ë–ï–î–ò–¢–ï–õ–¨ –í –ò–ì–†–ï {game_version.upper()}!\n\n"
            f"üë§ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: @{username}\n"
            f"üÜî ID: {user_id}\n"
            f"üéØ –£–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ: {word}\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}\n\n"
            f"üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –¥–ª—è –≤—Ä—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–∞!"
        )
        await self.send_notification(message)
    
    async def notify_roll_winner(self, game_version: str, winners: list):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞"""
        winners_text = "\n".join([f"{i+1}. @{w['username']} (–Ω–æ–º–µ—Ä: {w['number']})" for i, w in enumerate(winners)])
        
        message = (
            f"üé≤ –†–û–ó–´–ì–†–´–® {game_version.upper()} –ó–ê–í–ï–†–®–ï–ù!\n\n"
            f"üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:\n{winners_text}\n\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}\n\n"
            f"üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º–∏ –¥–ª—è –≤—Ä—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–æ–≤!"
        )
        await self.send_notification(message)
    
    async def notify_new_user(self, username: str, user_id: int, first_name: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        message = (
            f"üëã –ù–û–í–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨\n\n"
            f"üë§ –ò–º—è: {first_name}\n"
            f"üìß Username: @{username if username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üÜî ID: {user_id}\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )
        await self.send_notification(message)
    
    async def send_statistics(self):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∞–¥–º–∏–Ω—Å–∫—É—é –≥—Ä—É–ø–ø—É"""
        from data.user_data import user_data
        from data.games_data import word_games, roll_games
        from services.channel_stats import channel_stats
        from datetime import timedelta
        
        # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞
        total_users = len(user_data)
        active_24h = sum(1 for data in user_data.values() if 
                        datetime.now() - data['last_activity'] <= timedelta(days=1))
        active_7d = sum(1 for data in user_data.values() if 
                       datetime.now() - data['last_activity'] <= timedelta(days=7))
        total_messages = sum(data['message_count'] for data in user_data.values())
        banned_count = sum(1 for data in user_data.values() if data.get('banned'))
        
        # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä
        games_stats = ""
        for version in ['need', 'try', 'more']:
            active = "‚úÖ" if word_games[version]['active'] else "‚ùå"
            participants = len(roll_games[version]['participants'])
            total_words = len(word_games[version]['words'])
            
            games_stats += f"\n{version.upper()}: {active} –°–ª–æ–≤: {total_words}, –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {participants}"
        
        # –ù–û–í–û–ï: –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–Ω–∞–ª–æ–≤ –∏ —á–∞—Ç–æ–≤
        try:
            channel_statistics = await channel_stats.get_all_stats()
            channel_stats_text = "\n\n" + channel_stats.format_stats_message(channel_statistics)
        except Exception as e:
            logger.error(f"Error collecting channel stats: {e}")
            channel_stats_text = "\n\n‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–Ω–∞–ª–æ–≤"
        
        message = (
            f"üìä –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê\n"
            f"‚è∞ {datetime.now().strftime('%d.%m.%Y %H:%M')}\n\n"
            f"üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ë–û–¢–ê:\n"
            f"‚Ä¢ –í—Å–µ–≥–æ: {total_users}\n"
            f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ 24—á: {active_24h}\n"
            f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ 7–¥: {active_7d}\n"
            f"‚Ä¢ –ó–∞–±–∞–Ω–µ–Ω–æ: {banned_count}\n\n"
            f"üí¨ –°–û–û–ë–©–ï–ù–ò–Ø:\n"
            f"‚Ä¢ –í—Å–µ–≥–æ: {total_messages}\n"
            f"‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {total_messages // total_users if total_users > 0 else 0}\n\n"
            f"üéÆ –ò–ì–†–´:{games_stats}"
            f"{channel_stats_text}"
        )
        
        await self.send_notification(message)
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–∞—Ö –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        for chat_id in Config.STATS_CHANNELS.values():
            channel_stats.reset_message_count(chat_id)
        
        logger.info("Statistics with channel data sent to admin group")
    
    async def notify_error(self, error_type: str, error_message: str, user_id: Optional[int] = None):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        message = (
            f"‚ö†Ô∏è –û–®–ò–ë–ö–ê –í –ë–û–¢–ï\n\n"
            f"üî¥ –¢–∏–ø: {error_type}\n"
            f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {error_message[:200]}\n"
        )
        
        if user_id:
            message += f"üë§ User ID: {user_id}\n"
        
        message += f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        
        await self.send_notification(message)
    
    async def notify_lockdown(self, chat_id: int, duration: str, moderator: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ —á–∞—Ç–∞"""
        message = (
            f"üîí –ß–ê–¢ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù\n\n"
            f"üí¨ Chat ID: {chat_id}\n"
            f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration}\n"
            f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: @{moderator}\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )
        await self.send_notification(message)
    
    async def notify_broadcast(self, sent: int, failed: int, moderator: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞—Å—Å—ã–ª–∫–µ"""
        message = (
            f"üì¢ –†–ê–°–°–´–õ–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê\n\n"
            f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {sent}\n"
            f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å: {failed}\n"
            f"üëÆ –ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: @{moderator}\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )
        await self.send_notification(message)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
admin_notifications = AdminNotificationService()
