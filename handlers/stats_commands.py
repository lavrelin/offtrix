# -*- coding: utf-8 -*-
from telegram import Update
from telegram.ext import ContextTypes
from config import Config
from services.channel_stats import channel_stats
from services.admin_notifications import admin_notifications
import logging

logger = logging.getLogger(__name__)

async def channelstats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–Ω–∞–ª–æ–≤ (–∞–¥–º–∏–Ω—ã)"""
    if not Config.is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    await update.message.reply_text("üìä –°–æ–±–∏—Ä–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–Ω–∞–ª–æ–≤...")
    
    try:
        # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await channel_stats.get_all_stats()
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = channel_stats.format_stats_message(stats)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
        await update.message.reply_text(message, parse_mode='Markdown')
        
        logger.info(f"Channel stats sent to {update.effective_user.id}")
        
    except Exception as e:
        logger.error(f"Error in channelstats command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

async def fullstats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ –∞–¥–º–∏–Ω—Å–∫—É—é –≥—Ä—É–ø–ø—É (–∞–¥–º–∏–Ω—ã)"""
    if not Config.is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    await update.message.reply_text("üìä –û—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∞–¥–º–∏–Ω—Å–∫—É—é –≥—Ä—É–ø–ø—É...")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        await admin_notifications.send_statistics()
        
        await update.message.reply_text("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        
        logger.info(f"Full stats triggered by {update.effective_user.id}")
        
    except Exception as e:
        logger.error(f"Error in fullstats command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

async def resetmsgcount_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–∞—Ö (–∞–¥–º–∏–Ω—ã)"""
    if not Config.is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    try:
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —á–∞—Ç–æ–≤
        reset_count = 0
        for chat_id in Config.STATS_CHANNELS.values():
            channel_stats.reset_message_count(chat_id)
            reset_count += 1
        
        await update.message.reply_text(
            f"‚úÖ –°—á–µ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–±—Ä–æ—à–µ–Ω—ã –¥–ª—è {reset_count} —á–∞—Ç–æ–≤"
        )
        
        logger.info(f"Message counters reset by {update.effective_user.id}")
        
    except Exception as e:
        logger.error(f"Error in resetmsgcount command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å—á–µ—Ç—á–∏–∫–æ–≤: {e}")

async def chatinfo_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ (–∞–¥–º–∏–Ω—ã)"""
    if not Config.is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    try:
        chat = update.effective_chat
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
        try:
            member_count = await context.bot.get_chat_member_count(chat.id)
        except:
            member_count = "N/A"
        
        message = (
            f"‚ÑπÔ∏è **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ:**\n\n"
            f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {chat.title or 'N/A'}\n"
            f"üÜî ID: `{chat.id}`\n"
            f"üìä –¢–∏–ø: {chat.type}\n"
            f"üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {member_count}\n"
        )
        
        if chat.username:
            message += f"üîó Username: @{chat.username}\n"
        
        if chat.description:
            message += f"üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {chat.description[:100]}...\n"
        
        await update.message.reply_text(message, parse_mode='Markdown')
        
    except Exception as e:
        logger.error(f"Error in chatinfo command: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")

__all__ = [
    'channelstats_command',
    'fullstats_command',
    'resetmsgcount_command',
    'chatinfo_command'
]
