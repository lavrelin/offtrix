# -*- coding: utf-8 -*-
"""
Menu Handler v6.0 - SIMPLIFIED
Prefix: menu_ (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–ª—è –º–µ–Ω—é)
"""
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import logging

logger = logging.getLogger(__name__)

# ============= –£–ù–ò–ö–ê–õ–¨–ù–´–ï CALLBACK –ü–†–ï–§–ò–ö–°–´: menu_ =============
MENU_CALLBACKS = {
    'write': 'menu_write',              # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è
    'back_main': 'menu_back_main',      # –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    
    # –ü–æ—Å—Ç –≤ –ë—É–¥–∞–ø–µ—à—Ç
    'budapest': 'menu_budapest',        # –ü–æ—Å—Ç –≤ –ë—É–¥–∞–ø–µ—à—Ç (–≤—ã–±–æ—Ä –∞–Ω–æ–Ω/—Å username)
    'bud_anon': 'menu_bud_anon',       # –ê–Ω–æ–Ω–∏–º–Ω–æ
    'bud_username': 'menu_bud_username', # –° username
    
    # –ö–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥
    'catalog': 'menu_catalog',          # –ó–∞—è–≤–∫–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥
    
    # –ë–∞—Ä–∞—Ö–æ–ª–∫–∞
    'baraholka': 'menu_baraholka',      # –ë–∞—Ä–∞—Ö–æ–ª–∫–∞ (–≤—ã–±–æ—Ä —Ä–∞–∑–¥–µ–ª–∞)
    'bara_sell': 'menu_bara_sell',      # –ü—Ä–æ–¥–∞–º
    'bara_buy': 'menu_bara_buy',        # –ö—É–ø–ª—é
    'bara_give': 'menu_bara_give',      # –û—Ç–¥–∞–º
}

async def handle_menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Unified menu callback handler"""
    query = update.callback_query
    await query.answer()
    
    action = query.data
    logger.info(f"Menu action: {action}")
    
    handlers = {
        MENU_CALLBACKS['write']: show_write_menu,
        MENU_CALLBACKS['back_main']: show_main_menu,
        MENU_CALLBACKS['budapest']: show_budapest_options,
        MENU_CALLBACKS['bud_anon']: lambda u, c: start_budapest_post(u, c, anonymous=True),
        MENU_CALLBACKS['bud_username']: lambda u, c: start_budapest_post(u, c, anonymous=False),
        MENU_CALLBACKS['catalog']: start_catalog_request,
        MENU_CALLBACKS['baraholka']: show_baraholka_menu,
        MENU_CALLBACKS['bara_sell']: lambda u, c: start_baraholka_post(u, c, '–ü—Ä–æ–¥–∞–º'),
        MENU_CALLBACKS['bara_buy']: lambda u, c: start_baraholka_post(u, c, '–ö—É–ø–ª—é'),
        MENU_CALLBACKS['bara_give']: lambda u, c: start_baraholka_post(u, c, '–û—Ç–¥–∞–º'),
    }
    
    handler = handlers.get(action)
    if handler:
        await handler(update, context)
    else:
        await query.answer("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞", show_alert=True)

# ============= –ú–ï–ù–Æ –°–û–ó–î–ê–ù–ò–Ø =============

async def show_write_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π"""
    keyboard = [
        [InlineKeyboardButton("üìù –ü–æ—Å—Ç –≤ –ë—É–¥–∞–ø–µ—à—Ç", callback_data=MENU_CALLBACKS['budapest'])],
        [InlineKeyboardButton("üôÖ –ó–∞—è–≤–∫–∞ –≤ –ö–∞—Ç–∞–ª–æ–≥ –£—Å–ª—É–≥", callback_data=MENU_CALLBACKS['catalog'])],
        [InlineKeyboardButton("üõí –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞ –ë–∞—Ä–∞—Ö–æ–ª–∫–µ", callback_data=MENU_CALLBACKS['baraholka'])],
        [InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data=MENU_CALLBACKS['back_main'])]
    ]
    
    text = (
        "‚úçÔ∏è **–°–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏**\n\n"
        
        "**üìù –ü–æ—Å—Ç –≤ –ë—É–¥–∞–ø–µ—à—Ç**\n"
        "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∫–∞–Ω–∞–ª –ë—É–¥–∞–ø–µ—à—Ç\n"
        "–ê–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ —Å –≤–∞—à–∏–º username\n\n"
        
        "**üôÖ –ö–∞—Ç–∞–ª–æ–≥ –£—Å–ª—É–≥**\n"
        "–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é —É—Å–ª—É–≥—É/–º–∞—Å—Ç–µ—Ä–∞\n"
        "–≤ –∫–∞—Ç–∞–ª–æ–≥ –ë—É–¥–∞–ø–µ—à—Ç–∞\n\n"
        
        "**üõí –ë–∞—Ä–∞—Ö–æ–ª–∫–∞**\n"
        "–ü—Ä–æ–¥–∞—Ç—å, –∫—É–ø–∏—Ç—å –∏–ª–∏ –æ—Ç–¥–∞—Ç—å\n"
        "—Ç–æ–≤–∞—Ä—ã –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ"
    )
    
    await update.callback_query.edit_message_text(
        text, 
        reply_markup=InlineKeyboardMarkup(keyboard), 
        parse_mode='Markdown'
    )

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    from handlers.start_handler import show_main_menu as original_show_main_menu
    await original_show_main_menu(update, context)

# ============= –ü–û–°–¢ –í –ë–£–î–ê–ü–ï–®–¢ =============

async def show_budapest_options(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ã–±–æ—Ä: –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ —Å username"""
    keyboard = [
        [InlineKeyboardButton("üì© –ê–Ω–æ–Ω–∏–º–Ω–æ", callback_data=MENU_CALLBACKS['bud_anon'])],
        [InlineKeyboardButton("üí¨ –° –º–æ–∏–º username", callback_data=MENU_CALLBACKS['bud_username'])],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=MENU_CALLBACKS['write'])]
    ]
    
    text = (
        "üìù **–ü–æ—Å—Ç –≤ –ë—É–¥–∞–ø–µ—à—Ç**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:\n\n"
        
        "**üì© –ê–Ω–æ–Ω–∏–º–Ω–æ**\n"
        "–í–∞—à–µ –∏–º—è –Ω–µ –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω–æ –≤ –ø–æ—Å—Ç–µ\n\n"
        
        "**üí¨ –° username**\n"
        "–í–∞—à @username –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –≤ –ø–æ—Å—Ç–µ"
    )
    
    await update.callback_query.edit_message_text(
        text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='Markdown'
    )

async def start_budapest_post(update: Update, context: ContextTypes.DEFAULT_TYPE, anonymous: bool):
    """–ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –≤ –ë—É–¥–∞–ø–µ—à—Ç"""
    context.user_data['post_data'] = {
        'category': 'üôÖ‚Äç‚ôÇÔ∏è –ë—É–¥–∞–ø–µ—à—Ç',
        'anonymous': anonymous,
        'type': 'budapest'
    }
    context.user_data['waiting_for'] = 'budapest_text'
    
    anon_text = "–∞–Ω–æ–Ω–∏–º–Ω–æ" if anonymous else "—Å –≤–∞—à–∏–º username"
    
    keyboard = [[InlineKeyboardButton("üîô –û—Ç–º–µ–Ω–∞", callback_data=MENU_CALLBACKS['write'])]]
    
    text = (
        f"üìù **–ü–æ—Å—Ç –≤ –ë—É–¥–∞–ø–µ—à—Ç** ({anon_text})\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞.\n"
        "–ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å:\n"
        "‚Ä¢ –¢–µ–∫—Å—Ç\n"
        "‚Ä¢ –§–æ—Ç–æ\n"
        "‚Ä¢ –í–∏–¥–µ–æ\n\n"
        "üí° –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç –ø—Ä–æ–π–¥–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é"
    )
    
    await update.callback_query.edit_message_text(
        text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='Markdown'
    )

# ============= –ö–ê–¢–ê–õ–û–ì –£–°–õ–£–ì =============

async def start_catalog_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ piar handler –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞"""
    # –í—ã–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π piar handler
    context.user_data['piar_data'] = {}
    context.user_data['waiting_for'] = 'piar_name'
    context.user_data['piar_step'] = 'name'
    
    keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=MENU_CALLBACKS['write'])]]
    
    text = (
        "üôÖ **–ó–∞—è–≤–∫–∞ –≤ –ö–∞—Ç–∞–ª–æ–≥ –£—Å–ª—É–≥**\n\n"
        "üéØ –¶–µ–ª—å: —É–ø—Ä–æ—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫ —É—Å–ª—É–≥ –∏ –º–∞—Å—Ç–µ—Ä–æ–≤\n\n"
        "**–®–∞–≥ 1 –∏–∑ 8**\n"
        "üí≠ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏–ª–∏ –ø—Å–µ–≤–¥–æ–Ω–∏–º:"
    )
    
    await update.callback_query.edit_message_text(
        text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='Markdown'
    )

# ============= –ë–ê–†–ê–•–û–õ–ö–ê =============

async def show_baraholka_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞ –±–∞—Ä–∞—Ö–æ–ª–∫–∏"""
    keyboard = [
        [InlineKeyboardButton("üí∞ –ü—Ä–æ–¥–∞–º", callback_data=MENU_CALLBACKS['bara_sell'])],
        [InlineKeyboardButton("üîé –ö—É–ø–ª—é", callback_data=MENU_CALLBACKS['bara_buy'])],
        [InlineKeyboardButton("üéÅ –û—Ç–¥–∞–º", callback_data=MENU_CALLBACKS['bara_give'])],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=MENU_CALLBACKS['write'])]
    ]
    
    text = (
        "üõí **–ë–∞—Ä–∞—Ö–æ–ª–∫–∞ –ë—É–¥–∞–ø–µ—à—Ç–∞**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:\n\n"
        
        "**üí∞ –ü—Ä–æ–¥–∞–º**\n"
        "–ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥\n\n"
        
        "**üîé –ö—É–ø–ª—é**\n"
        "–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏\n\n"
        
        "**üéÅ –û—Ç–¥–∞–º**\n"
        "–û—Ç–¥–∞—Ç—å –¥–∞—Ä–æ–º –∏–ª–∏ –æ–±–º–µ–Ω—è—Ç—å"
    )
    
    await update.callback_query.edit_message_text(
        text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='Markdown'
    )

async def start_baraholka_post(update: Update, context: ContextTypes.DEFAULT_TYPE, section: str):
    """–ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –Ω–∞ –±–∞—Ä–∞—Ö–æ–ª–∫–µ"""
    context.user_data['post_data'] = {
        'category': 'üõí –ë–∞—Ä–∞—Ö–æ–ª–∫–∞',
        'subcategory': section,
        'anonymous': False,
        'type': 'baraholka'
    }
    context.user_data['waiting_for'] = 'baraholka_text'
    
    emoji_map = {
        '–ü—Ä–æ–¥–∞–º': 'üí∞',
        '–ö—É–ø–ª—é': 'üîé',
        '–û—Ç–¥–∞–º': 'üéÅ'
    }
    
    keyboard = [[InlineKeyboardButton("üîô –û—Ç–º–µ–Ω–∞", callback_data=MENU_CALLBACKS['baraholka'])]]
    
    text = (
        f"{emoji_map.get(section, 'üõí')} **–ë–∞—Ä–∞—Ö–æ–ª–∫–∞: {section}**\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:\n"
        "‚Ä¢ –ß—Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç–µ/–∏—â–µ—Ç–µ\n"
        "‚Ä¢ –¶–µ–Ω–∞ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)\n"
        "‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç—ã\n"
        "‚Ä¢ –ú–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ\n\n"
        "üí° –ü–æ—Å—Ç –ø—Ä–æ–π–¥–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é"
    )
    
    await update.callback_query.edit_message_text(
        text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='Markdown'
    )

__all__ = ['handle_menu_callback', 'MENU_CALLBACKS', 'show_write_menu', 'show_main_menu']
