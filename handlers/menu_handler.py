# -*- coding: utf-8 -*-
"""
Menu Handler v2.0 - SIMPLIFIED
Prefix: menu_

–°—Ç—Ä—É–∫—Ç—É—Ä–∞:
1. –ü–æ—Å—Ç –≤ –ë—É–¥–∞–ø–µ—à—Ç (–∞–Ω–æ–Ω–∏–º–Ω–æ / —Å username) + –º–µ–¥–∏–∞
2. –ó–∞—è–≤–∫–∞ –≤ –ö–∞—Ç–∞–ª–æ–≥ –£—Å–ª—É–≥
3. –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞ –ë–∞—Ä–∞—Ö–æ–ª–∫–µ (–ø—Ä–æ–¥–∞–º / –∫—É–ø–ª—é / –æ—Ç–¥–∞–º) + –º–µ–¥–∏–∞
"""
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import logging

logger = logging.getLogger(__name__)

# ============= UNIQUE CALLBACK PREFIX: menu_ =============
MENU_CALLBACKS = {
    'write': 'menu_write',           # Show write menu
    'back': 'menu_back',             # Back to main menu
    'budapest': 'menu_bp',           # Budapest post
    'catalog': 'menu_cat',           # Catalog service
    'baraholka': 'menu_bar',         # Baraholka/trade
}

async def handle_menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Unified menu callback handler"""
    query = update.callback_query
    await query.answer()
    
    action = query.data
    logger.info(f"Menu action: {action}")
    
    handlers = {
        MENU_CALLBACKS['write']: show_write_menu,
        MENU_CALLBACKS['back']: show_main_menu,
        MENU_CALLBACKS['budapest']: start_budapest_post,
        MENU_CALLBACKS['catalog']: start_catalog,
        MENU_CALLBACKS['baraholka']: start_baraholka,
    }
    
    handler = handlers.get(action)
    if handler:
        await handler(update, context)
    else:
        await query.answer("‚ö†Ô∏è  –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)

async def show_write_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Show write menu - SIMPLIFIED VERSION"""
    keyboard = [
        [InlineKeyboardButton("üì¢ –ü–æ—Å—Ç –≤ –ë—É–¥–∞–ø–µ—à—Ç", callback_data=MENU_CALLBACKS['budapest'])],
        [InlineKeyboardButton("üìã –ó–∞—è–≤–∫–∞ –≤ –ö–∞—Ç–∞–ª–æ–≥ –£—Å–ª—É–≥", callback_data=MENU_CALLBACKS['catalog'])],
        [InlineKeyboardButton("üõí –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞ –ë–∞—Ä–∞—Ö–æ–ª–∫–µ", callback_data=MENU_CALLBACKS['baraholka'])],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=MENU_CALLBACKS['back'])]
    ]
    
    text = (
        "### –†–∞–∑–¥–µ–ª—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–π\n\n"
        
        "**üì¢ –ü–æ—Å—Ç –≤ –ë—É–¥–∞–ø–µ—à—Ç**\n"
        "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∫–∞–Ω–∞–ª @snghu\n"
        "–ú–æ–∂–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º\n\n"
        
        "**üìã –ó–∞—è–≤–∫–∞ –≤ –ö–∞—Ç–∞–ª–æ–≥ –£—Å–ª—É–≥**\n"
        "–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏ —É—Å–ª—É–≥–∏ –≤ @catalogtrix\n"
        "–ú–∞—Å—Ç–µ—Ä–∞, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã, –±–∏–∑–Ω–µ—Å\n\n"
        
        "**üõí –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞ –ë–∞—Ä–∞—Ö–æ–ª–∫–µ**\n"
        "–ü—Ä–æ–¥–∞—Ç—å, –∫—É–ø–∏—Ç—å –∏–ª–∏ –æ—Ç–¥–∞—Ç—å —Ç–æ–≤–∞—Ä—ã\n"
        "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ @hungarytrade"
    )
    
    await update.callback_query.edit_message_text(
        text, 
        reply_markup=InlineKeyboardMarkup(keyboard), 
        parse_mode='Markdown'
    )

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Show main menu"""
    from handlers.start_handler import show_main_menu as original_show_main_menu
    await original_show_main_menu(update, context)

async def start_budapest_post(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Start Budapest post - show anonymous/username choice"""
    keyboard = [
        [InlineKeyboardButton("üì© –ê–Ω–æ–Ω–∏–º–Ω–æ", callback_data="bp_anon")],
        [InlineKeyboardButton("üí¨ –° username", callback_data="bp_user")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=MENU_CALLBACKS['write'])]
    ]
    
    text = (
        "üì¢ **–ü–æ—Å—Ç –≤ –ë—É–¥–∞–ø–µ—à—Ç**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:\n\n"
        "üì© **–ê–Ω–æ–Ω–∏–º–Ω–æ** - –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∞\n"
        "üí¨ **–° username** - —Å –≤–∞—à–∏–º @username\n\n"
        "–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏/–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–µ–¥–∏–∞"
    )
    
    await update.callback_query.edit_message_text(
        text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='Markdown'
    )

async def start_catalog(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Start catalog - redirect to piar_handler"""
    # This redirects to existing piar_handler (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    context.user_data['piar_data'] = {}
    context.user_data['waiting_for'] = 'piar_name'
    context.user_data['piar_step'] = 'name'
    
    keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=MENU_CALLBACKS['write'])]]
    
    text = (
        "üìã **–ó–∞—è–≤–∫–∞ –≤ –ö–∞—Ç–∞–ª–æ–≥ –£—Å–ª—É–≥**\n\n"
        "üéØ –¶–µ–ª—å: —É–ø—Ä–æ—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫ —É—Å–ª—É–≥ –∏ –º–∞—Å—Ç–µ—Ä–æ–≤\n\n"
        "üí° **–®–∞–≥ 1 –∏–∑ 8**\n"
        "üìù –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –∏–ª–∏ –ø—Å–µ–≤–¥–æ–Ω–∏–º:"
    )
    
    await update.callback_query.edit_message_text(
        text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='Markdown'
    )

async def start_baraholka(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Start baraholka - show sell/buy/give menu"""
    keyboard = [
        [InlineKeyboardButton("üí∞ –ü—Ä–æ–¥–∞–º", callback_data="bar_sell")],
        [InlineKeyboardButton("üîé –ö—É–ø–ª—é", callback_data="bar_buy")],
        [InlineKeyboardButton("üéÅ –û—Ç–¥–∞–º", callback_data="bar_give")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=MENU_CALLBACKS['write'])]
    ]
    
    text = (
        "üõí **–ë–∞—Ä–∞—Ö–æ–ª–∫–∞**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:\n\n"
        "üí∞ **–ü—Ä–æ–¥–∞–º** - –ø—Ä–æ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä\n"
        "üîé **–ö—É–ø–ª—é** - –∏—â—É —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏\n"
        "üéÅ **–û—Ç–¥–∞–º** - –æ—Ç–¥–∞—Ç—å –¥–∞—Ä–æ–º\n\n"
        "–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏/–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞"
    )
    
    await update.callback_query.edit_message_text(
        text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='Markdown'
    )

# Export
__all__ = ['handle_menu_callback', 'MENU_CALLBACKS']
