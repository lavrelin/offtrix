from telegram import Update
from telegram.ext import ContextTypes
from config import Config
from data.games_data import word_games, get_game_version
from data.user_data import waiting_users
import logging

logger = logging.getLogger(__name__)

# –°–∏—Å—Ç–µ–º–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
view_pages = {
    'play3xia': {
        'text': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É play3xia! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ.',
        'media_url': None
    },
    'play3x': {
        'text': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É play3x! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ.',
        'media_url': None
    },
    'playxxx': {
        'text': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É playxxx! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ.',
        'media_url': None
    }
}

async def view_page_add_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–∞–¥–º–∏–Ω)"""
    if not Config.is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    command_text = update.message.text
    game_version = get_game_version(command_text)
    
    if not context.args:
        await update.message.reply_text(
            f"üìù **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**\n"
            f"`/{game_version}add —Ç–µ–∫—Å—Ç`\n\n"
            f"–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–¥–∏–∞ —Ñ–∞–π–ª (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
            parse_mode='Markdown'
        )
        return
    
    new_text = ' '.join(context.args)
    view_pages[game_version]['text'] = new_text
    
    waiting_users[update.effective_user.id] = {
        'action': 'add_media_to_page',
        'game_version': game_version
    }
    
    await update.message.reply_text(
        f"‚úÖ **–¢–µ–∫—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É {game_version}:**\n\n"
        f"{new_text}\n\n"
        f"üì∏ **–ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–¥–∏–∞ —Ñ–∞–π–ª –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.**",
        parse_mode='Markdown'
    )

async def view_page_edit_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–∞–¥–º–∏–Ω)"""
    if not Config.is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    command_text = update.message.text
    game_version = get_game_version(command_text)
    
    waiting_users[update.effective_user.id] = {
        'action': 'view_page_edit',
        'game_version': game_version
    }
    
    current_page = view_pages[game_version]
    
    await update.message.reply_text(
        f"üìù **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {game_version}:**\n\n"
        f"**–¢–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç:**\n{current_page['text']}\n\n"
        f"**–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç:**",
        parse_mode='Markdown'
    )

async def view_page_info_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)"""
    command_text = update.message.text
    game_version = get_game_version(command_text)
    
    page_data = view_pages[game_version]
    
    # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
    if page_data.get('media_url'):
        try:
            if page_data['media_url'].lower().endswith(('.jpg', '.jpeg', '.png', '.gif')):
                await update.message.reply_photo(
                    photo=page_data['media_url'],
                    caption=f"üìÑ **–°—Ç—Ä–∞–Ω–∏—Ü–∞ {game_version}**"
                )
            elif page_data['media_url'].lower().endswith(('.mp4', '.avi', '.mov')):
                await update.message.reply_video(
                    video=page_data['media_url'],
                    caption=f"üìÑ **–°—Ç—Ä–∞–Ω–∏—Ü–∞ {game_version}**"
                )
        except Exception as e:
            logger.error(f"Error sending media for page {game_version}: {e}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    await update.message.reply_text(
        f"üìÑ **–°—Ç—Ä–∞–Ω–∏—Ü–∞ {game_version}:**\n\n"
        f"{page_data['text']}",
        parse_mode='Markdown'
    )
