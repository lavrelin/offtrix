# -*- coding: utf-8 -*-
"""
Start Handler v6.0 - SIMPLIFIED
"""
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from config import Config
import logging
import secrets
import string

logger = logging.getLogger(__name__)

# Import menu callbacks
from menu_handler_v6 import MENU_CALLBACKS

def generate_referral_code():
    """Generate unique referral code"""
    return ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(8))

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle /start command"""
    user_id = update.effective_user.id
    username = update.effective_user.username
    first_name = update.effective_user.first_name
    last_name = update.effective_user.last_name
    chat_id = update.effective_chat.id
    
    # ‚úÖ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –ë—É–¥–∞–ø–µ—à—Ç —á–∞—Ç–µ
    if chat_id == Config.BUDAPEST_CHAT_ID:
        try:
            await update.message.delete()
            logger.info(f"Deleted /start from Budapest chat, user {user_id}")
        except Exception as e:
            logger.error(f"Could not delete /start: {e}")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    try:
        from services.db import db
        from models import User, Gender
        from sqlalchemy import select
        from datetime import datetime
        
        async with db.get_session() as session:
            result = await session.execute(select(User).where(User.id == user_id))
            user = result.scalar_one_or_none()
            
            if not user:
                new_user = User(
                    id=user_id,
                    username=username,
                    first_name=first_name,
                    last_name=last_name,
                    gender=Gender.UNKNOWN,
                    referral_code=generate_referral_code(),
                    created_at=datetime.utcnow()
                )
                session.add(new_user)
                await session.commit()
                logger.info(f"Created new user: {user_id}")
                
    except Exception as e:
        logger.warning(f"Could not save user to DB: {e}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await show_main_menu(update, context)

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Show simplified main menu v6.0"""
    
    # ‚úÖ –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤ –ë—É–¥–∞–ø–µ—à—Ç —á–∞—Ç–µ
    chat_id = update.effective_chat.id
    if chat_id == Config.BUDAPEST_CHAT_ID:
        logger.info(f"Blocked main menu in Budapest chat")
        return
    
    # ‚úÖ –£–ü–†–û–©–ï–ù–ù–û–ï –ú–ï–ù–Æ
    keyboard = [
        [InlineKeyboardButton("üôÖ‚Äç‚ôÇÔ∏è –ë—É–¥–∞–ø–µ—à—Ç - –∫–∞–Ω–∞–ª", url="https://t.me/snghu")],
        [InlineKeyboardButton("üôÖ‚Äç‚ôÄÔ∏è –ë—É–¥–∞–ø–µ—à—Ç - —á–∞—Ç", url="https://t.me/tgchatxxx")],
        [InlineKeyboardButton("üôÖ –ö–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥", url="https://t.me/catalogtrix")],
        [InlineKeyboardButton("üïµÔ∏è‚Äç‚ôÇÔ∏è –ë–∞—Ä–∞—Ö–æ–ª–∫–∞", url="https://t.me/hungarytrade")],
        [InlineKeyboardButton("‚úçÔ∏è –°–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é", callback_data=MENU_CALLBACKS['write'])]
    ]
    
    text = (
        "üá≠üá∫ **–°–æ–æ–±—â–µ—Å—Ç–≤–æ –ë—É–¥–∞–ø–µ—à—Ç–∞ –¢—Ä–∏–∫—Å**\n\n"
        
        "**–ù–∞—à–∏ –∫–∞–Ω–∞–ª—ã:**\n"
        "üôÖ‚Äç‚ôÇÔ∏è **–ö–∞–Ω–∞–ª** ‚Äî –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
        "üôÖ‚Äç‚ôÄÔ∏è **–ß–∞—Ç** ‚Äî –æ–±—â–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
        "üôÖ **–ö–∞—Ç–∞–ª–æ–≥** ‚Äî –º–∞—Å—Ç–µ—Ä–∞ –∏ —É—Å–ª—É–≥–∏\n"
        "üïµÔ∏è‚Äç‚ôÇÔ∏è **–ë–∞—Ä–∞—Ö–æ–ª–∫–∞** ‚Äî –∫—É–ø–ª—è/–ø—Ä–æ–¥–∞–∂–∞\n\n"
            
        "**–°–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é:**\n"
        "–ù–∞–∂–º–∏—Ç–µ ‚úçÔ∏è **–°–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é**\n\n"
        
        "üìå *–ó–∞–∫—Ä–µ–ø–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞*"
    )
    
    try:
        if update.callback_query:
            await update.callback_query.edit_message_text(
                text,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode='Markdown'
            )
        else:
            await update.effective_message.reply_text(
                text,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode='Markdown'
            )
    except Exception as e:
        logger.error(f"Error showing main menu: {e}")
        # Fallback
        try:
            await update.effective_message.reply_text(
                "üá≠üá∫ TrixBot - –°–æ–æ–±—â–µ—Å—Ç–≤–æ –ë—É–¥–∞–ø–µ—à—Ç–∞\n\n"
                "–ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
        except Exception as e2:
            logger.error(f"Fallback menu also failed: {e2}")

__all__ = ['start_command', 'show_main_menu']
